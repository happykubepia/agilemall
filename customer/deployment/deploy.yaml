apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer
  labels:
    app: customer
spec:
  selector:
    matchLabels:
      app: customer
  replicas: 1
  template:
    metadata:
      name: customer
      labels:
        app: customer
    spec:
      imagePullSecrets:
      - name: dockerhub      
      containers:
        - name: customer
          image: docker.io/hiondal/customer:latest
          imagePullPolicy: Always
          env:
            - name: SERVER_PORT
              value: "18080"
          envFrom:
          - configMapRef:
              name: customer
          - secretRef:
              name: customer
                            
          ports:
            - name: port1
              containerPort: 8081
          resources:
            requests:
              cpu: 500m
              memory: 512Mi
            limits:
              cpu: 500m
              memory: 1024Mi

---

kind: ConfigMap
apiVersion: v1
metadata:
  name: customer
data:
  DB_SERVER: mysql
  DB_PORT: "3306"
  DB_NAME: "customer"
  QUEUE_SERVER: 165.192.105.60
  QUEUE_PORT: 5672
  
---

kind: Secret
apiVersion: v1
metadata:
  name: customer
type: Opaque
stringData:
  DB_USERNAME: root
  DB_PASSWORD: P@ssw0rd$
  QUEUE_USERNAME: admin
  QUEUE_PASSWORD: P@ssw0rd$ 
---

apiVersion: v1
kind: Service
metadata:
  name: customer
spec:
  type: ClusterIP
  selector:
    app: customer
  ports:
    - name: customer
      port: 8080
      targetPort: 18080

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: customer
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  ingressClassName: nginx
  rules:
    - host: customer-hiondal.165.192.105.60.nip.io
      http:
        paths:
          - path: /(.*)
            pathType: Prefix
            backend:
              service:
                name: customer
                port: 
                  number: 8080
                  