package com.order.rest;

import java.lang.reflect.Type;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.order.model.ChannelResponse;
import com.order.config.IChannel;
import com.order.service.OrderService;
import com.order.service.Queue;
import com.order.service.RabbitListener;
import com.order.service.ResponseDeliveryVO;
import com.order.service.ResponsePaymentVO;
import com.order.service.ResultListener;

public class OrderController {
	@Autowired
	private OrderService orderService;
	
	@Bean
	Queue responseQueue() {
		return new Queue(IChnnel.CH_ORDER_RESPONSE, false);
	}

	/**
	 * payment, delivery 서비스 응답을 수신한다.
	 * 
	 * @param consumerRecord
	 */
	@RabbitListener(queues = IChnnel.CH_ORDER_RESPONSE)
	public void receiveResponse(String payload) {
		System.out.println("[@.@ ORDER RECEIVED] " + payload.toString());

		try {
			Gson gson = new Gson();
			JsonElement jsonObj = gson.fromJson(payload, JsonElement.class);

			String trxId = jsonObj.getAsJsonObject().get("trxId").getAsString();
			String type = jsonObj.getAsJsonObject().get("messageType").getAsString();

			ResultListener listener = orderManager.getOrder(trxId);
			if ( listener != null ) {
				listener.fireData(jsonObj);
				if ( "PAYMENT".equals(type) ) {
					Type resType = new TypeToken<ChannelResponse<ResponsePaymentVO>>(){}.getType();
					ChannelResponse<ResponsePaymentVO> resObj = gson.fromJson(payload, resType);

					if ( resObj.isReturnCode() ) {
						//orderRepository.updateState4Payment(resObj.getPayload().getOrderId());
					}
				}
			}

			/*
			 * 트랜잭션이 완료된 이후의 메시지 중에서 배송에서 전달된 응답만 처리한다.
			 */
			if ( "DELIVERY".equals(type) ) {
				Type resType = new TypeToken<ChannelResponse<ResponseDeliveryVO>>(){}.getType();
				ChannelResponse<ResponseDeliveryVO> resObj = gson.fromJson(payload, resType);

				if ( resObj.isReturnCode() ) {
					//orderRepository.updateState4Delivery(resObj.getPayload().getOrderId());
				}
			}
		}catch(Exception e) {
			e.printStackTrace();
		}
	}

}
